name: Backend Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up PHP and composer dependencies
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, xml, ctype, json

      # Step 3: Cache Composer dependencies for faster builds
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # Step 4: Install dependencies using Composer
      - name: Install dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-scripts --no-progress --optimize-autoloader

      # Step 5: Run Laravel tests
      - name: Run Tests
        run: php artisan test

      # Step 6: Set up environment variables
      - name: Create environment file
        run: |
          cp .env.example .env
          php artisan key:generate
        env:
          APP_ENV: production
          APP_DEBUG: false
          DB_CONNECTION: mysql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      # Step 7: Build and cache assets
      - name: Build assets
        run: npm install && npm run prod
        working-directory: ./ # Change this if assets are in a different directory

      # Step 8: Deploy to the server (only if SSH is configured)
      - name: Deploy to server
        if: github.ref == 'refs/heads/main'
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i $SSH_KEY user@your-server-ip 'cd /path/to/your/project && git pull origin main && composer install && php artisan migrate --force && php artisan cache:clear && php artisan config:cache'
